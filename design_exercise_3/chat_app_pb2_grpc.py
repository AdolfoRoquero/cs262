# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import chat_app_pb2 as chat__app__pb2


class ChatAppStub(object):
    """Interface exported by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/chatapp.ChatApp/Login',
                request_serializer=chat__app__pb2.User.SerializeToString,
                response_deserializer=chat__app__pb2.RequestReply.FromString,
                )
        self.SignUp = channel.unary_unary(
                '/chatapp.ChatApp/SignUp',
                request_serializer=chat__app__pb2.User.SerializeToString,
                response_deserializer=chat__app__pb2.RequestReply.FromString,
                )
        self.ListAll = channel.unary_unary(
                '/chatapp.ChatApp/ListAll',
                request_serializer=chat__app__pb2.ListAllRequest.SerializeToString,
                response_deserializer=chat__app__pb2.UserList.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/chatapp.ChatApp/DeleteUser',
                request_serializer=chat__app__pb2.User.SerializeToString,
                response_deserializer=chat__app__pb2.RequestReply.FromString,
                )
        self.SendMessage = channel.unary_unary(
                '/chatapp.ChatApp/SendMessage',
                request_serializer=chat__app__pb2.ChatMessage.SerializeToString,
                response_deserializer=chat__app__pb2.RequestReply.FromString,
                )
        self.ReceiveMessage = channel.unary_stream(
                '/chatapp.ChatApp/ReceiveMessage',
                request_serializer=chat__app__pb2.User.SerializeToString,
                response_deserializer=chat__app__pb2.ChatMessage.FromString,
                )
        self.NewUser_StateUpdate = channel.unary_unary(
                '/chatapp.ChatApp/NewUser_StateUpdate',
                request_serializer=chat__app__pb2.User.SerializeToString,
                response_deserializer=chat__app__pb2.RequestReply.FromString,
                )
        self.DeleteUser_StateUpdate = channel.unary_unary(
                '/chatapp.ChatApp/DeleteUser_StateUpdate',
                request_serializer=chat__app__pb2.User.SerializeToString,
                response_deserializer=chat__app__pb2.RequestReply.FromString,
                )
        self.EnqueueMessage_StateUpdate = channel.unary_unary(
                '/chatapp.ChatApp/EnqueueMessage_StateUpdate',
                request_serializer=chat__app__pb2.ChatMessage.SerializeToString,
                response_deserializer=chat__app__pb2.RequestReply.FromString,
                )
        self.DequeueMessage_StateUpdate = channel.unary_unary(
                '/chatapp.ChatApp/DequeueMessage_StateUpdate',
                request_serializer=chat__app__pb2.ChatMessage.SerializeToString,
                response_deserializer=chat__app__pb2.RequestReply.FromString,
                )


class ChatAppServicer(object):
    """Interface exported by the server.
    """

    def Login(self, request, context):
        """Request to log in User into the platform 
        if the username already exists.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignUp(self, request, context):
        """Request to sign up new User into the platform 
        (only if the username is not taken).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAll(self, request, context):
        """Request to list all users in the platform 
        that match a given filter in ListAllRequest.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Request to delete User.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Request to send a message (all sending info contained in ChatMessage)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveMessage(self, request, context):
        """Request to receive ALL pending messages for a given user. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewUser_StateUpdate(self, request, context):
        """
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser_StateUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnqueueMessage_StateUpdate(self, request, context):
        """Request enqueue a message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DequeueMessage_StateUpdate(self, request, context):
        """Request to dequeue a message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatAppServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=chat__app__pb2.User.FromString,
                    response_serializer=chat__app__pb2.RequestReply.SerializeToString,
            ),
            'SignUp': grpc.unary_unary_rpc_method_handler(
                    servicer.SignUp,
                    request_deserializer=chat__app__pb2.User.FromString,
                    response_serializer=chat__app__pb2.RequestReply.SerializeToString,
            ),
            'ListAll': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAll,
                    request_deserializer=chat__app__pb2.ListAllRequest.FromString,
                    response_serializer=chat__app__pb2.UserList.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=chat__app__pb2.User.FromString,
                    response_serializer=chat__app__pb2.RequestReply.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=chat__app__pb2.ChatMessage.FromString,
                    response_serializer=chat__app__pb2.RequestReply.SerializeToString,
            ),
            'ReceiveMessage': grpc.unary_stream_rpc_method_handler(
                    servicer.ReceiveMessage,
                    request_deserializer=chat__app__pb2.User.FromString,
                    response_serializer=chat__app__pb2.ChatMessage.SerializeToString,
            ),
            'NewUser_StateUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.NewUser_StateUpdate,
                    request_deserializer=chat__app__pb2.User.FromString,
                    response_serializer=chat__app__pb2.RequestReply.SerializeToString,
            ),
            'DeleteUser_StateUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser_StateUpdate,
                    request_deserializer=chat__app__pb2.User.FromString,
                    response_serializer=chat__app__pb2.RequestReply.SerializeToString,
            ),
            'EnqueueMessage_StateUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.EnqueueMessage_StateUpdate,
                    request_deserializer=chat__app__pb2.ChatMessage.FromString,
                    response_serializer=chat__app__pb2.RequestReply.SerializeToString,
            ),
            'DequeueMessage_StateUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.DequeueMessage_StateUpdate,
                    request_deserializer=chat__app__pb2.ChatMessage.FromString,
                    response_serializer=chat__app__pb2.RequestReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chatapp.ChatApp', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatApp(object):
    """Interface exported by the server.
    """

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatapp.ChatApp/Login',
            chat__app__pb2.User.SerializeToString,
            chat__app__pb2.RequestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatapp.ChatApp/SignUp',
            chat__app__pb2.User.SerializeToString,
            chat__app__pb2.RequestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatapp.ChatApp/ListAll',
            chat__app__pb2.ListAllRequest.SerializeToString,
            chat__app__pb2.UserList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatapp.ChatApp/DeleteUser',
            chat__app__pb2.User.SerializeToString,
            chat__app__pb2.RequestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatapp.ChatApp/SendMessage',
            chat__app__pb2.ChatMessage.SerializeToString,
            chat__app__pb2.RequestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReceiveMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/chatapp.ChatApp/ReceiveMessage',
            chat__app__pb2.User.SerializeToString,
            chat__app__pb2.ChatMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewUser_StateUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatapp.ChatApp/NewUser_StateUpdate',
            chat__app__pb2.User.SerializeToString,
            chat__app__pb2.RequestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser_StateUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatapp.ChatApp/DeleteUser_StateUpdate',
            chat__app__pb2.User.SerializeToString,
            chat__app__pb2.RequestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnqueueMessage_StateUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatapp.ChatApp/EnqueueMessage_StateUpdate',
            chat__app__pb2.ChatMessage.SerializeToString,
            chat__app__pb2.RequestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DequeueMessage_StateUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatapp.ChatApp/DequeueMessage_StateUpdate',
            chat__app__pb2.ChatMessage.SerializeToString,
            chat__app__pb2.RequestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
